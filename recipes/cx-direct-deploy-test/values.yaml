configmap:
  data:
    com.liferay.portal.search.elasticsearch7.configuration.ElasticsearchConfiguration.config: |
      authenticationEnabled=B"false"
      clusterName="liferay_cluster"
      httpSSLEnabled=B"false"
      indexNamePrefix="liferay-"
      networkHostAddresses=["http://liferay-default-search:9200"]
      operationMode="REMOTE"
      password="search"
      username="search"
customEnv:
  x-cx-direct-deploy-test:
  - name: LIFERAY_DISABLE_TRIAL_LICENSE
    value: "true"
  - name: LIFERAY_JPDA_ENABLED
    value: "true"
customInitContainers:
  x-cx-direct-deploy-test:
    - containerTemplate: |
        - command:
          - bash
          - -c
          - |
            if [ -d /mnt/local/osgi/client-extensions/ ]
            then
              mkdir -p /temp/liferay/deploy
              cp -fv /mnt/local/osgi/client-extensions/*.zip /temp/liferay/deploy
            fi
          image: {{ printf "%s:%s" .image.repository (.image.tag | toString) }}
          imagePullPolicy: {{ .image.pullPolicy }}
          name: cx-direct-deploy-test-init-container
          volumeMounts:
          - mountPath: /temp
            name: liferay-persistent-volume
          - mountPath: /mnt/local
            name: mount-local
customVolumeMounts:
  x-cx-direct-deploy-test:
  - mountPath: /etc/liferay/mount/files/deploy/license.xml
    name: liferay-configmap
    subPath: license.xml
  - mountPath: /mnt/local
    name: mount-local
  - mountPath: /opt/liferay/osgi/configs/com.liferay.portal.search.elasticsearch7.configuration.ElasticsearchConfiguration.config
    name: liferay-configmap
    subPath: com.liferay.portal.search.elasticsearch7.configuration.ElasticsearchConfiguration.config
  - mountPath: /opt/liferay/osgi/war
    name: liferay-persistent-volume
    subPath: osgi/war
customVolumes:
  x-cx-direct-deploy-test:
  - hostPath:
      path: /mnt/local
    name: mount-local
dependencies:
  database:
    portalProperties: |
      jdbc.default.driverClassName=org.postgresql.Driver
      jdbc.default.url=jdbc:postgresql://liferay-default-database:5432/lportal?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false
      jdbc.default.username=database
      jdbc.default.password=database
    source: statefulset
    statefulset:
      env:
      - name: POSTGRES_DB
        value: lportal
      - name: POSTGRES_PASSWORD
        value: database
      - name: POSTGRES_USER
        value: database
      - name: PGUSER
        value: database
      - name: PGDATA
        value: /var/lib/postgresql/data/db
      image:
        pullPolicy: IfNotPresent
        repository: postgres
        tag: 16
      livenessProbe:
        exec:
          command: ["sh", "-c", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      ports:
      - containerPort: 5432
        name: database
        protocol: TCP
      readinessProbe:
        exec:
          command: ["sh", "-c", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      replicaCount: 1
      resources:
        limits:
          cpu: 2000m
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 256Mi
      service:
        ports:
        - name: database
          port: 5432
          protocol: TCP
          targetPort: database
        type: ClusterIP
      startupProbe:
        exec:
          command: ["sh", "-c", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      storage: 1Gi
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
      - metadata:
          name: liferay-database-pvc
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: liferay-database-pvc
  search:
    source: statefulset
    statefulset:
      env:
      - name: xpack.security.enabled
        value: "false"
      - name: xpack.security.transport.ssl.enabled
        value: "false"
      - name: xpack.security.http.ssl.enabled
        value: "false"
      - name: cluster.name
        value: liferay_cluster
      - name: discovery.type
        value: single-node
      - name: ES_JAVA_OPTS
        value: "-Xms256m -Xmx256m"
      - name: ELASTIC_PASSWORD
        value: search
      image:
        repository: elasticsearch
        tag: 8.17.0
        pullPolicy: IfNotPresent
      initContainers:
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: busybox:stable-uclibc
        name: increase-vm-max-map
        securityContext:
          privileged: true
      - command: ["sh", "-c", "ulimit -n 65536"]
        image: busybox:stable-uclibc
        name: increase-fd-ulimit
        securityContext:
          privileged: true
      - command:
        - sh
        - -c
        - |
          if [ ! -d ./plugins/analysis-icu ];then
            bin/elasticsearch-plugin install --batch analysis-icu analysis-kuromoji analysis-smartcn analysis-stempel
          else
            echo "Plugins already installed!"
          fi

          if [ ! -e ./_config/log4j2.properties ];then
            cp -rv ./config/* ./_config
          fi
        image: elasticsearch:8.17.0
        imagePullPolicy: IfNotPresent
        name: install-plugins
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/plugins
          name: liferay-search-pvc
          subPath: plugins
        - mountPath: /usr/share/elasticsearch/_config
          name: liferay-search-pvc
          subPath: config
      livenessProbe:
        tcpSocket:
          port: search
      podSecurityContext:
        fsGroup: 1000
      ports:
      - containerPort: 9200
        name: search
        protocol: TCP
      readinessProbe:
        tcpSocket:
          port: search
      replicaCount: 1
      resources:
        limits:
          cpu: 4000m
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 256Mi
      service:
        ports:
        - name: search
          port: 9200
          protocol: TCP
          targetPort: search
        type: ClusterIP
      startupProbe:
        failureThreshold: 30
        tcpSocket:
          port: search
      storage: 1Gi
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
      - metadata:
          name: liferay-search-pvc
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
      volumeMounts:
      - mountPath: /usr/share/elasticsearch/config
        name: liferay-search-pvc
        subPath: config
      - mountPath: /usr/share/elasticsearch/data
        name: liferay-search-pvc
        subPath: data
      - mountPath: /usr/share/elasticsearch/logs
        name: liferay-search-pvc
        subPath: logs
      - mountPath: /usr/share/elasticsearch/plugins
        name: liferay-search-pvc
        subPath: plugins
ingress:
  enabled: true
  rules:
  - host: "*.dxp.localtest.me"
    http:
      paths:
      - backend:
          service:
            name: liferay-default
            port:
              name: http
        path: /
        pathType: ImplementationSpecific
portalProperties: |
  include-and-override=portal-developer.properties
  company.default.virtual.host.mail.domain=main.dxp.localtest.me
  company.default.virtual.host.name=main.dxp.localtest.me
  company.default.web.id=main.dxp.localtest.me
  web.server.display.node=true
  web.server.protocol=http
resources:
  limits:
    cpu: 4000m
    memory: 8Gi
  requests:
    cpu: 2000m
    memory: 6Gi
